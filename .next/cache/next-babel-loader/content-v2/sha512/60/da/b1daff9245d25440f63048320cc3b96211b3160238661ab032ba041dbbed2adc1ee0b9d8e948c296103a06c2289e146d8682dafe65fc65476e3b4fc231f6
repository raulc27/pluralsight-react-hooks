{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/raul/Projetos/pluralsight-course-using-react-hooks/02-Basic-React-Hooks-useState-useRef-useEffect/clip2-Setting-Up-Toolchain/src/ImageToggleOnScroll.js\";\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst ImageToggleOnScroll = ({\n  primaryImg,\n  secondaryImg\n}) => {\n  const imageRef = useRef(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n\n  const isInView = () => {\n    const rect = imageRef.current.getBoundingClientRect();\n    return rect.top = 0 && rect.bottom <= window.innerHeight;\n  };\n\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n  useEffect(() => {\n    setIsLoading(false);\n    setInView(isInView());\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []);\n\n  const scrollHandler = () => {\n    setInView(isInView());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: //  isLoading ? \"\"\n    inView ? primaryImg : secondaryImg,\n    alt: \"\",\n    ref: imageRef,\n    width: \"200\",\n    height: \"200\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["/home/raul/Projetos/pluralsight-course-using-react-hooks/02-Basic-React-Hooks-useState-useRef-useEffect/clip2-Setting-Up-Toolchain/src/ImageToggleOnScroll.js"],"names":["React","useEffect","useRef","useState","ImageToggleOnScroll","primaryImg","secondaryImg","imageRef","isLoading","setIsLoading","isInView","rect","current","getBoundingClientRect","top","bottom","window","innerHeight","inView","setInView","addEventListener","scrollHandler","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AACzBC,EAAAA,UADyB;AACbC,EAAAA;AADa,CAAD,KAEtB;AAEF,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACnB,UAAMC,IAAI,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,qBAAjB,EAAb;AACA,WAAOF,IAAI,CAACG,GAAL,GAAW,KAAKH,IAAI,CAACI,MAAL,IAAeC,MAAM,CAACC,WAA7C;AACH,GAHD;;AAKA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,KAAD,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,IAAAA,SAAS,CAACT,QAAQ,EAAT,CAAT;AACAM,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAoCD,aAApC;AACH,KAFD;AAGH,GAPQ,EAOP,EAPO,CAAT;;AASA,QAAMA,aAAa,GAAG,MAAM;AACxBF,IAAAA,SAAS,CAACT,QAAQ,EAAT,CAAT;AACH,GAFD;;AAKA,sBACI;AACA,IAAA,GAAG,EACD;AACEQ,IAAAA,MAAM,GAAGb,UAAH,GAAgBC,YAH1B;AAKA,IAAA,GAAG,EAAC,EALJ;AAMA,IAAA,GAAG,EAAEC,QANL;AAOA,IAAA,KAAK,EAAC,KAPN;AAQA,IAAA,MAAM,EAAC;AARP;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxCD;;AA0CA,eAAeH,mBAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ImageToggleOnScroll = ({ \n    primaryImg, secondaryImg\n}) => {\n      \n    const imageRef = useRef(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const isInView = () => {\n        const rect = imageRef.current.getBoundingClientRect();\n        return rect.top = 0 && rect.bottom <= window.innerHeight;\n    };\n\n    const [inView, setInView] = useState(false);\n\n    useEffect(()=>{\n        setIsLoading(false);\n        setInView(isInView());\n        window.addEventListener(\"scroll\", scrollHandler);\n        return () => {\n            window.removeEventListener(\"scroll\",scrollHandler);\n        };\n    },[]);\n\n    const scrollHandler = () => {\n        setInView(isInView());\n    };\n\n\n    return(\n        <img \n        src={\n          //  isLoading ? \"\"\n            inView ? primaryImg : secondaryImg\n        } \n        alt=\"\" \n        ref={imageRef}\n        width=\"200\"\n        height=\"200\"\n        />\n    )\n};\n\nexport default ImageToggleOnScroll;"]},"metadata":{},"sourceType":"module"}