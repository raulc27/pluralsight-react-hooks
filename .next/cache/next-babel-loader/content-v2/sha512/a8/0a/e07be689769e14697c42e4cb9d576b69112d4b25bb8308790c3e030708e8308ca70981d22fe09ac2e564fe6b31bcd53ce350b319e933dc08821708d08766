{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/raul/Projetos/pluralsight-course-using-react-hooks/02-Basic-React-Hooks-useState-useRef-useEffect/clip2-Setting-Up-Toolchain/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/raul/Projetos/pluralsight-course-using-react-hooks/02-Basic-React-Hooks-useState-useRef-useEffect/clip2-Setting-Up-Toolchain/pages/syntax.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\n\nvar Syntax = function Syntax() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      checkBoxValue = _useState2[0],\n      setCheckBoxValue = _useState2[1];\n\n  useEffect(function () {\n    console.log('in useEffect');\n    return function () {\n      console.log('in useEffect Cleanup');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Syntax, \"wE0HdO4g7J2KRd1NDwcm1BrwifU=\");\n\n_c = Syntax;\nexport default Syntax;\n\nvar _c;\n\n$RefreshReg$(_c, \"Syntax\");","map":{"version":3,"sources":["/home/raul/Projetos/pluralsight-course-using-react-hooks/02-Basic-React-Hooks-useState-useRef-useEffect/clip2-Setting-Up-Toolchain/pages/syntax.js"],"names":["React","useEffect","Syntax","useState","checkBoxValue","setCheckBoxValue","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBAEyBC,QAAQ,CAAC,KAAD,CAFjC;AAAA;AAAA,MAEVC,aAFU;AAAA,MAEKC,gBAFL;;AAIjBJ,EAAAA,SAAS,CAAC,YAAI;AACVK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAO,YAAM;AACTD,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,KAFD;AAGH,GALQ,EAKP,EALO,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CAdD;;GAAML,M;;KAAAA,M;AAgBN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nconst Syntax = () => {\n\n    const [checkBoxValue, setCheckBoxValue] = useState(false);\n\n    useEffect(()=>{\n        console.log('in useEffect');\n        return () => {\n            console.log('in useEffect Cleanup');\n        }\n    },[])\n\n    return (\n        <div></div>\n    );\n};\n\nexport default Syntax;"]},"metadata":{},"sourceType":"module"}